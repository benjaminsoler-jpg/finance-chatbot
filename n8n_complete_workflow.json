{
  "name": "Finance Chatbot - Complete Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "finance-chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "finance-chat-webhook"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://finance-chat.loca.lt/chat/simple",
        "options": {
          "headers": {
            "Content-Type": "application/json"
          }
        },
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $json.message || $json.text || $json.query || $json.prompt }}"
            }
          ]
        }
      },
      "id": "http-request-chatbot",
      "name": "HTTP Request to Chatbot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "functionCode": "// Procesar respuesta del chatbot\nconst chatbotResponse = $input.first().json;\n\n// Verificar si la respuesta fue exitosa\nif (chatbotResponse.success) {\n  return {\n    success: true,\n    message: chatbotResponse.response,\n    timestamp: new Date().toISOString(),\n    model: 'gpt-3.5-turbo',\n    original_query: $('Webhook Trigger').first().json.message || $('Webhook Trigger').first().json.text || $('Webhook Trigger').first().json.query\n  };\n} else {\n  return {\n    success: false,\n    error: chatbotResponse.error || 'Error desconocido',\n    message: 'Lo siento, no pude procesar tu consulta en este momento.',\n    timestamp: new Date().toISOString(),\n    original_query: $('Webhook Trigger').first().json.message || $('Webhook Trigger').first().json.text || $('Webhook Trigger').first().json.query\n  };\n}"
      },
      "id": "process-response",
      "name": "Process Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.success }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-success",
      "name": "Check Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 500]
    },
    {
      "parameters": {
        "functionCode": "// Log de la consulta exitosa\nconst data = $input.first().json;\n\nconsole.log(`✅ Consulta exitosa - ${new Date().toISOString()}`);\nconsole.log(`Query: ${data.original_query}`);\nconsole.log(`Response: ${data.message.substring(0, 100)}...`);\n\nreturn data;"
      },
      "id": "log-success",
      "name": "Log Success",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "functionCode": "// Log del error\nconst data = $input.first().json;\n\nconsole.log(`❌ Error en consulta - ${new Date().toISOString()}`);\nconsole.log(`Query: ${data.original_query}`);\nconsole.log(`Error: ${data.error}`);\n\nreturn data;"
      },
      "id": "log-error",
      "name": "Log Error",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 600]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request to Chatbot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request to Chatbot": {
      "main": [
        [
          {
            "node": "Process Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Response": {
      "main": [
        [
          {
            "node": "Check Success",
            "type": "main",
            "index": 0
          },
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Success": {
      "main": [
        [
          {
            "node": "Log Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Success": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-15T10:30:00.000Z",
      "updatedAt": "2024-01-15T10:30:00.000Z",
      "id": "finance-chatbot",
      "name": "Finance Chatbot"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-15T10:30:00.000Z",
  "versionId": "1"
}
